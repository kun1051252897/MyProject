<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
        MyBatis核心配置文件中的标签必须要按照指定的顺序配置:
        properties? ,settings?.typeAlases? typeHandlers?,objectfactory?,
        ojectWrapperfactory? reflectorFactory?,plugins?,environments?,
        databaseldrovider?,mappers?"
    -->
    <!--引入配置文件，可以在当前文件中直接通过${key}来访问value-->
    <properties resource="jdbc.properties"/>

    <settings>
        <!--将下划线映射为驼峰-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--开启分步延迟加载-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!--按需加载 false:延迟加载 true:即使开启延迟加载也会全部加载-->
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>

    <!--
        typeAliases:设置类型别名，即为某个具体的类型设置一个别名
        在MyBatis的范围中，就可以使用别名表示一个具体的类型
    -->
    <typeAliases>
        <!--
            type:设置需要起别名的类型
            alias:设置某个类型的别名，未设置别名默认用类名 例:user(不区分大小写)
        -->
        <!--        <typeAlias type="com.fun.funmedia.pojo.User"/>-->
        <!--        <typeAlias type="com.fun.funmedia.pojo.User" alias="abc"/>-->
        <!--通过包设置别名，指定包下的类全为默认别名-->
        <package name="com.fun.funmedia.pojo"/>
    </typeAliases>

    <!--
        environments:设置连接数据库的环境
        属性:
        default:设置默认使用的环境id
    -->
    <environments default="development">
        <!--
            environment:设置一个具体的连接数据库的环境
            属性:
            id:设置环境的唯一标识，不能重复
        -->
        <environment id="development">
            <!--
                transactionManager:设置事务管理器
                属性:
                type:设置事务的管理方式 "JDBC|MANAGED"
                    JDBC:表示使用JDBC中原生的事务管理方式
                    MANAGED:被管理，例如Spring
            -->
            <transactionManager type="JDBC"/>
            <!--
                dataSource:设置数据源
                属性:
                type:设置数据源类型 "POOLED|UNPOOLED|JNDI"
                    POOLED:表示使用数据库连接池
                    UNPOOLED:表示不使用数据库连接池
                    JNDI:表示使用上下文中的数据源
            -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!--引入映射文件-->
    <mappers>
        <!--        <mapper resource="mappers/UserMapper.xml"/>-->
        <!--
            以包的方式来引入映射文件，但是必须满足:
            1.mapper接口和映射文件所在的包必须一致;
            2.mapper接口的名字和映射文件的名字必须一致;
        -->
        <package name="com.fun.funmedia.mapper"/>
    </mappers>
</configuration>