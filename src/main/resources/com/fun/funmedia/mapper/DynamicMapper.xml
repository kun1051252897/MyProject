<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fun.funmedia.mapper.DynamicMapper">

    <!--List<Emp> getEmpByCondition(Emp emp);-->
    <!--
        动态SQL:
        1、if，通过test属性中的表达式判断标签中的内容是否有效(是否会拼接到sql 中)
        2、where
        a.若where标签中有条件成立，会自动生成where关键字
        b.会自动将where标签中内容前多余的and去掉
        c.where标签中没有任何一个条件成立，则where没有任何功能
        3、trim
        prefix，suffix:在标签中内容前面或后面添加指定内容
        prefixOverrides，suffixOverrides: 在标签中内容前面或后面去指定内容
        4、choose、when、otherwise
        相当于java中的if...else if...else
        when至少设置一个，otherwise最多设置一个
        5，foreach
        collection:设置要循环的数组或集合
        item: 用一个字符串表示数组或集合中的每一个数据
        separator: 设置每次循环的数据之间的分隔符
        open: 循环的所有内容以什么开始
        close: 循环的所有内容以什么结束
    -->
    <select id="getEmpByConditionOne" resultType="Emp">
        select * from f_emp where 1=1
        <if test="empName != '' and empName != null">
            and emp_name = #{empName}
        </if>
        <if test="age != '' and age != null">
            and age = #{age}
        </if>
        <if test="gender != '' and gender != null">
            and gender = #{gender}
        </if>
    </select>

    <select id="getEmpByCondition" resultType="Emp">
        select * from f_emp
        <where>
            <if test="empName != '' and empName != null">
                emp_name = #{empName}
            </if>
            <if test="age != '' and age != null">
                and age = #{age}
            </if>
            <if test="gender != '' and gender != null">
                and gender = #{gender}
            </if>
        </where>
    </select>

    <!--void insertMoreEmp(@Param("emps") List<Emp> emps);-->
    <insert id="insertMoreEmp">
        insert into f_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null ,#{emp.empName},#{emp.age},#{emp.gender},null )
        </foreach>
    </insert>

    <!--void deleteMoreEmp(@Param("empIds") Integer[] empIds);-->
    <delete id="deleteMoreEmpOne">
        delete from f_emp where emp_id in
        <foreach collection="empIds" item="empId" separator="," open="(" close=")">
            #{empId}
        </foreach>
    </delete>

    <delete id="deleteMoreEmp">
        delete from f_emp where
        <foreach collection="empIds" item="empId" separator="or">
            emp_id = #{empId}
        </foreach>
    </delete>

</mapper>